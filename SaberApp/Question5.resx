<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AlNS/gU+VGCi2+GMJwAAAABJRU5ErkJggg==
</value>
  </data>
</root>